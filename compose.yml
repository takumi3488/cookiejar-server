services:
  db:
    image: postgres:18-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: cookiejar
    ports:
      - "5432:5432"
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  writer:
    build:
      target: writer
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: cookiejar
      ALLOW_ORIGINS: http://localhost:3000
      OTEL_EXPORTER_OTLP_ENDPOINT: jaeger:4317
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      jaeger:
        condition: service_healthy
    restart: unless-stopped

  reader:
    build:
      target: reader
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: cookiejar
      GRPC_PORT: "50051"
      OTEL_EXPORTER_OTLP_ENDPOINT: jaeger:4317
    ports:
      - "50051:50051"
    depends_on:
      db:
        condition: service_healthy
      jaeger:
        condition: service_healthy
    restart: unless-stopped

  jaeger:
    image: jaegertracing/jaeger:latest
    ports:
      - "16686:16686" # Jaeger UI
      - "4317:4317"   # OTLP gRPC
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:13133/status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
